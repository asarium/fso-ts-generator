/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type DocumentationElement = ClassElement | LibraryElement | CallElement | PropertyElement;
export type ClassElement = BaseDocElement & {
  type: "class";
  superClass: string;
  [k: string]: any;
};
export type LibraryElement = BaseDocElement & {
  type: "library";
  [k: string]: any;
};
export type CallElement = BaseDocElement & {
  type: "function" | "operator";
  parameters: string;
  returnDocumentation: string;
  returnType: TypeSpecifier;
  [k: string]: any;
};
export type TypeSpecifier = string | ListType | TupleType | IteratorType | MapType;
export type PropertyElement = BaseDocElement & {
  type: "property";
  returnDocumentation: string;
  getterType: TypeSpecifier;
  setterType: TypeSpecifier;
  [k: string]: any;
};

export interface ScriptingDocumentation {
  actions: string[];
  conditions: string[];
  enums: {
    [k: string]: number;
  };
  elements: DocumentationElement[];
}
export interface BaseDocElement {
  shortName: string;
  name: string;
  description: string;
  children: DocumentationElement[];
  type: string;
  [k: string]: any;
}
export interface ListType {
  element: TypeSpecifier;
  type: "list";
}
export interface TupleType {
  elements: TypeSpecifier[];
  type: "tuple";
}
export interface IteratorType {
  element: TypeSpecifier;
  type: "iterator";
}
export interface MapType {
  key: TypeSpecifier;
  value: TypeSpecifier;
  type?: "map";
}
